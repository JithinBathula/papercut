# AI-Generated Questions Callback Handler
import os
from typing import Final
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, filters, ContextTypes
import base64
import aiohttp
import io
from gptapi import send_image_to_openai, chat_with_gpt

from dotenv import load_dotenv
load_dotenv()

OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')
AI_GENERATED: Final = "Assesment book questions"
REAL_PAPER: Final = "Past Year Questions"


async def ai_generated_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "upload_image":
        await query.edit_message_text(text="Please upload an image.")
    elif query.data == "type_topic":
        await query.edit_message_text(text="Please enter a topic for AI-generated questions.")

# Image Upload Handler
async def handle_image_upload(update: Update, context: ContextTypes.DEFAULT_TYPE):
    photo = update.message.photo[-1]  # Get the highest resolution image
    file = await context.bot.get_file(photo.file_id)
    
    # Download the image
    async with aiohttp.ClientSession() as session:
        async with session.get(file.file_path) as resp:
            if resp.status != 200:
                await update.message.reply_text("Error downloading image")
                return
            image_data = await resp.read()

    # Convert image to base64
    base64_image = base64.b64encode(image_data).decode('utf-8')

    # Send the image to OpenAI's API
    response = await send_image_to_openai(base64_image)
    
    # Return the questions generated by OpenAI
    await update.message.reply_text(response)

# Text Message Handler
async def handle_text_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    question_type = context.user_data.get("question_type")

    if question_type == AI_GENERATED:
        topic = update.message.text
        await update.message.reply_text(f"Generating AI questions for the topic '{topic}'...")
        response = await chat_with_gpt(topic)
        await update.message.reply_text(response)